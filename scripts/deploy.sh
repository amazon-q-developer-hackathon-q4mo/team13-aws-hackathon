#!/bin/bash
set -e

# ÏÑ§Ï†ï
PROJECT_NAME="liveinsight"
AWS_REGION="us-east-1"
IMAGE_TAG=${1:-latest}

echo "üöÄ Deploying to ECS..."

# Ïù∏ÌîÑÎùº Î∞∞Ìè¨
echo "üèóÔ∏è  Deploying infrastructure..."
cd infrastructure/web-app
terraform init
terraform plan
terraform apply -auto-approve

# ECR Î¶¨Ìè¨ÏßÄÌÜ†Î¶¨ URL Í∞ÄÏ†∏Ïò§Í∏∞
ECR_REPO=$(terraform output -raw ecr_repository_url)
CLUSTER_NAME=$(terraform output -raw ecs_cluster_name)
SERVICE_NAME=$(terraform output -raw ecs_service_name)

cd ../..

# Docker Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Î∞è Ìë∏Ïãú
echo "üì¶ Building and pushing Docker image..."
./scripts/build.sh $IMAGE_TAG

# ECS ÏÑúÎπÑÏä§ ÏóÖÎç∞Ïù¥Ìä∏
echo "üîÑ Updating ECS service..."
aws ecs update-service \
    --cluster $CLUSTER_NAME \
    --service $SERVICE_NAME \
    --force-new-deployment \
    --region $AWS_REGION

# Î∞∞Ìè¨ ÏÉÅÌÉú ÌôïÏù∏
echo "‚è≥ Waiting for deployment to complete..."
aws ecs wait services-stable \
    --cluster $CLUSTER_NAME \
    --services $SERVICE_NAME \
    --region $AWS_REGION

# ALB DNS Ïù¥Î¶Ñ Ï∂úÎ†•
ALB_DNS=$(cd infrastructure/web-app && terraform output -raw alb_dns_name)
echo "‚úÖ Deployment completed successfully!"
echo "üåê Application URL: http://$ALB_DNS"

# Ìó¨Ïä§Ï≤¥ÌÅ¨
echo "üè• Checking application health..."
sleep 30
if curl -f "http://$ALB_DNS/health/" > /dev/null 2>&1; then
    echo "‚úÖ Health check passed!"
else
    echo "‚ö†Ô∏è  Health check failed. Please check the logs."
fi