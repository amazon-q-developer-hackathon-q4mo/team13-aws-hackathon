name: Deploy to ECS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: liveinsight-app
  ECS_SERVICE: LiveInsight-service
  ECS_CLUSTER: LiveInsight-cluster

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd src
        pip install -r requirements.txt

    - name: Upload static files to S3
      run: |
        cd infrastructure
        STATIC_BUCKET=$(terraform output -raw static_files_bucket 2>/dev/null || echo "")
        if [ -n "$STATIC_BUCKET" ]; then
          cd ../src
          export STATIC_FILES_BUCKET=$STATIC_BUCKET
          python manage.py collectstatic --noinput
          aws s3 sync staticfiles/ s3://$STATIC_BUCKET/static/ --delete
          echo "✅ 정적 파일 S3 업로드 완료"
        fi

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd src
        docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --force-new-deployment \
          --region ${{ env.AWS_REGION }}

    - name: Wait for deployment
      run: |
        aws ecs wait services-stable \
          --cluster ${{ env.ECS_CLUSTER }} \
          --services ${{ env.ECS_SERVICE }} \
          --region ${{ env.AWS_REGION }}

    - name: Verify deployment
      run: |
        echo "🔍 배포 검증 중..."
        sleep 30
        ALB_URL="http://LiveInsight-alb-552300943.us-east-1.elb.amazonaws.com"
        
        for i in {1..5}; do
          if curl -f "$ALB_URL/health/" > /dev/null 2>&1; then
            echo "✅ 헬스체크 성공!"
            break
          else
            echo "⏳ 헬스체크 재시도 $i/5..."
            sleep 10
          fi
        done